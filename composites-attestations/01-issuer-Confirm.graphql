type Attestation @loadModel(id: "$ATTESTATION_ID") {
  id: ID!
}

# Instances will be created by NewCoin to attest to the validity of each issuer instance
type Confirm @createModel(
    accountRelation: LIST
    description: "A simple model to track issuer attestation confirmations by NewCoin"
  )
  @createIndex(fields: [{ path: ["attester"] }])
  @createIndex(fields: [{ path: ["recipient"] }])
{
  publisher: DID! @documentAccount 
  uid: String! @string(minLength: 66, maxLength: 66)
  schema: String! @string(minLength: 66, maxLength: 66)
  attester: String! @string(minLength: 42, maxLength: 42)
  verifyingContract: String! @string(minLength: 42, maxLength: 42)
  easVersion: String! @string(maxLength: 5)
  version: Int!
  chainId: Int! 
  r: String! @string(minLength: 66, maxLength: 66)
  s: String! @string(minLength: 66, maxLength: 66)
  v: Int! 
  types: [Types] @list(maxLength: 100)
  templateType: Template
  recipient: String @string(minLength: 42, maxLength: 42)
  issuer: String @string(minLength: 42, maxLength: 42)
  expirationTime: DateTime
  revocationTime: DateTime
  refUID: String @string(minLength: 66, maxLength: 66)
  time: Int!
  data: String! @string(maxLength: 1000000)
  attestationId: StreamID! @documentReference(model: "Attestation")
  attestation: Attestation! @relationDocument(property: "attestationId")
}

type Types {
  name: String! @string(maxLength: 20)
  type: String! @string(maxLength: 20)
}

type Template {
  wattType: WattType
  multiplier: Float!
}

enum WattType {
  VWATT 
  SWATT 
  CWATT
  NWATT
  XWATT
  LWATT
  PWATT
  TVL
}
